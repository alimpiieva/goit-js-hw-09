{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAaC,SAASC,cAAc,SAI/BC,iBAAiB,UAAU,SAASC,G,kBAiBrC,IAemBC,EAAUC,EAfzBC,EAAeC,GAASC,EAAI,GAAKC,GAelBL,EAdLI,EAceH,EAdZC,EAeZ,IAAII,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KAtBAW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,EAAApB,GAASqB,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEpEmB,SAAQ,WACPlB,GAAgBG,C,KAzBtBN,EAAMsB,iBAEN,IAAMC,EAAa1B,SAASC,cAAc,uBACpC0B,EAAY3B,SAASC,cAAc,sBACnC2B,EAAc5B,SAASC,cAAc,wBAErCM,EAAQsB,OAAOH,EAAWI,OAC1BrB,EAAOoB,OAAOF,EAAUG,OACxBC,EAASF,OAAOD,EAAYE,OAElC,GAAIvB,EAAQ,GAAKE,EAAO,GAAKsB,GAAU,EACrCb,EAAApB,GAASqB,OAAOa,QAAQ,6CAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nimport Notiflix from \"notiflix\";\n\nform.addEventListener('submit', function(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.warning('Усі значення мають бути більше ніж 0');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    let currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        currentDelay += step;\n      });\n  }\n});\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","position","delay","currentDelay","delay1","i","step","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","preventDefault","delayInput","stepInput","amountInput","Number","value","amount","warning","i1","_loop"],"version":3,"file":"03-promises.f0507c47.js.map"}